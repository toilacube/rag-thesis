"""refactor_doc_processing_use_rabbitmq_remove_processingtask

Revision ID: 567d2689c19f
Revises: 6ecfa2423206
Create Date: 2025-05-17 14:41:58.570860

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '567d2689c19f'
down_revision: Union[str, None] = '6ecfa2423206'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('processing_tasks')
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('api_keys', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('chats', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('chats', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('document_chunks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('document_chunks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('document_uploads', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('document_uploads', sa.Column('document_id', sa.Integer(), nullable=True))
    op.alter_column('document_uploads', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('document_uploads', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.drop_constraint('document_uploads_project_id_fkey', 'document_uploads', type_='foreignkey')
    op.create_foreign_key(None, 'document_uploads', 'documents', ['document_id'], ['id'])
    op.create_foreign_key(None, 'document_uploads', 'projects', ['project_id'], ['id'])
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('uq_kb_file_name', 'documents', type_='unique')
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('messages', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('permissions', 'is_system_level',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('project_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('project_permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('uq_project_user_permission', 'project_permissions', type_='unique')
    op.drop_constraint('project_permissions_project_id_fkey', 'project_permissions', type_='foreignkey')
    op.drop_constraint('project_permissions_user_id_fkey', 'project_permissions', type_='foreignkey')
    op.drop_constraint('project_permissions_granted_by_fkey', 'project_permissions', type_='foreignkey')
    op.drop_constraint('project_permissions_permission_id_fkey', 'project_permissions', type_='foreignkey')
    op.create_foreign_key(None, 'project_permissions', 'projects', ['project_id'], ['id'])
    op.create_foreign_key(None, 'project_permissions', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'project_permissions', 'permissions', ['permission_id'], ['id'])
    op.drop_column('project_permissions', 'granted_by')
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('project_permissions', sa.Column('granted_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'project_permissions', type_='foreignkey')
    op.drop_constraint(None, 'project_permissions', type_='foreignkey')
    op.drop_constraint(None, 'project_permissions', type_='foreignkey')
    op.create_foreign_key('project_permissions_permission_id_fkey', 'project_permissions', 'permissions', ['permission_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('project_permissions_granted_by_fkey', 'project_permissions', 'users', ['granted_by'], ['id'])
    op.create_foreign_key('project_permissions_user_id_fkey', 'project_permissions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('project_permissions_project_id_fkey', 'project_permissions', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint('uq_project_user_permission', 'project_permissions', ['project_id', 'user_id', 'permission_id'])
    op.alter_column('project_permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('project_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('permissions', 'is_system_level',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('messages', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_unique_constraint('uq_kb_file_name', 'documents', ['project_id', 'file_name'])
    op.alter_column('documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(None, 'document_uploads', type_='foreignkey')
    op.drop_constraint(None, 'document_uploads', type_='foreignkey')
    op.create_foreign_key('document_uploads_project_id_fkey', 'document_uploads', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('document_uploads', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('document_uploads', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('document_uploads', 'document_id')
    op.drop_column('document_uploads', 'updated_at')
    op.alter_column('document_chunks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('document_chunks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('chats', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('chats', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('api_keys', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_table('processing_tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('document_upload_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('initiated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='processing_tasks_document_id_fkey'),
    sa.ForeignKeyConstraint(['document_upload_id'], ['document_uploads.id'], name='processing_tasks_document_upload_id_fkey'),
    sa.ForeignKeyConstraint(['initiated_by'], ['users.id'], name='processing_tasks_initiated_by_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='processing_tasks_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='processing_tasks_pkey')
    )
    # ### end Alembic commands ###
